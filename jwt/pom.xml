<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.douzone</groupId>
    <artifactId>homepractice</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
  <artifactId>jwt</artifactId>
  <packaging>war</packaging>
  
  <!-- jre System 라이브러리 1.25인것 1.8로 바꿈 -->
	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>
  <!-- 부모 스타터 대체하는것: 우리수업에서 파일정리때문에 메이븐모듈(프로젝트가) 단독으로 쓰이지 못해서 사용 --> 
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>2.5.6</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- spring Boot devtools: live reload-->
		<!-- 스프링 부트에서 제공하는 개발 편의를 위한 모듈
		     주로 변경된 코드를 서버 또는 화면에 신속하게 반영해 
		     결과를 확인하기 위해서 사용 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		
		<!-- spring Boot Web Starter-->
		<!--Spring MVC를 사용한 RESTful서비스를 개발하는데 사용. -->
		<!-- 웹 관련 기능의 집합 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- MyBatis Starter-->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.3.2</version>
		</dependency>
		
		<!-- MariaDB JDBC Driver -->
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>
		<!-- Common DBCP -->
		<!-- 데이터베이스 커넥션풀 -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
			<!-- Common IO -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>
		<!-- tomcat jasper -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
		</dependency>
		<!-- lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.24</version>
			<scope>provided</scope>
		</dependency>
		<!-- JWT -->
		 <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        
        <!-- For Working with JSon Web Tokens ( JWT) -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.9.1</version>
        </dependency>
        <!-- JAVA 버전이 10 이상일 때 에러 생김 -->
        <!-- java.lang.ClassNotFoundException: javax.xml.bind.DatatypeConverter -->
        <!-- 
        <dependency>
    		<groupId>org.glassfish.jaxb</groupId>
    		<artifactId>jaxb-runtime</artifactId>
		</dependency> 
		-->
	</dependencies>
	<build>
		<finalName>jwt</finalName>
		<plugins>
			<!-- 스프링 부트 메이븐 플러그인 : 최종목적 : 우버 jar를 만듦 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- war -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.1</version>
				<configuration>
					<warSourceDirectory>src/main/webapp</warSourceDirectory>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<version>1.1</version>
				<configuration>
					<url>http://192.168.219.104:8088/manager/text</url>
					<path>/jwt</path>
					<username>admin</username>
					<password>manager</password>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>